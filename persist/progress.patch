diff --git a/chat_exporter/chat_exporter.py b/chat_exporter/chat_exporter.py
index e1b2028..7fce014 100644
--- a/chat_exporter/chat_exporter.py
+++ b/chat_exporter/chat_exporter.py
@@ -53,6 +53,7 @@ async def quick_export(
 
 async def export(
     channel: discord.TextChannel,
+    total: int,
     limit: Optional[int] = None,
     tz_info="UTC",
     guild: Optional[discord.Guild] = None,
@@ -85,6 +86,7 @@ async def export(
     return (
         await Transcript(
             channel=channel,
+            total = total,
             limit=limit,
             messages=None,
             pytz_timezone=tz_info,
diff --git a/chat_exporter/construct/message.py b/chat_exporter/construct/message.py
index b0733d0..473ce6a 100644
--- a/chat_exporter/construct/message.py
+++ b/chat_exporter/construct/message.py
@@ -1,4 +1,5 @@
 import html
+from tqdm import tqdm
 import io
 import traceback
 from typing import List, Optional, Union
@@ -461,20 +462,22 @@ async def gather_messages(
         messages[0] = message
         messages[0].reference = None
 
-    for message in messages:
-        content_html, meta_data = await MessageConstruct(
-            message,
-            previous_message,
-            pytz_timezone,
-            military_time,
-            guild,
-            meta_data,
-            message_dict,
-            attachment_handler,
-            ).construct_message()
-
-        message_html += content_html
-        previous_message = message
+    with tqdm(total=len(messages), desc="Transcribing messages") as pbar:
+        for message in messages:
+            content_html, meta_data = await MessageConstruct(
+                message,
+                previous_message,
+                pytz_timezone,
+                military_time,
+                guild,
+                meta_data,
+                message_dict,
+                attachment_handler,
+                ).construct_message()
+
+            message_html += content_html
+            previous_message = message
+            pbar.update(1)
 
     message_html += "</div>"
     return message_html, meta_data
diff --git a/chat_exporter/construct/transcript.py b/chat_exporter/construct/transcript.py
index 60ea8a8..b0eb506 100644
--- a/chat_exporter/construct/transcript.py
+++ b/chat_exporter/construct/transcript.py
@@ -1,4 +1,5 @@
 import datetime
+from tqdm import tqdm
 import html
 import traceback
 
@@ -27,6 +28,7 @@ class TranscriptDAO:
     def __init__(
         self,
         channel: discord.TextChannel,
+        total: int,
         limit: Optional[int],
         messages: Optional[List[discord.Message]],
         pytz_timezone,
@@ -39,6 +41,7 @@ class TranscriptDAO:
         attachment_handler: Optional[AttachmentHandler],
     ):
         self.channel = channel
+        self.total = total
         self.messages = messages
         self.limit = int(limit) if limit else None
         self.military_time = military_time
@@ -162,11 +165,15 @@ class TranscriptDAO:
 class Transcript(TranscriptDAO):
     async def export(self):
         if not self.messages:
-            self.messages = [message async for message in self.channel.history(
-                limit=self.limit,
-                before=self.before,
-                after=self.after,
-            )]
+            self.messages = []
+            with tqdm(total=self.total, desc="Enumerating messages") as pbar:
+                async for message in self.channel.history(
+                    limit=self.limit,
+                    before=self.before,
+                    after=self.after,
+                ):
+                    self.messages.append(message)
+                    pbar.update(1)
 
         if not self.after:
             self.messages.reverse()
